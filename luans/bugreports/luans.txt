***************************************************TEST I***************************************************
Test File: projects/hansemik/dominion.c
Test Type: Unit Test
Test Specification: 
##### Bug & Description #####
1. If there are more than 4 players in this game, it should be terminated. But Dominion doesn't and keeps output results.
2. The first one shows correct result, but the second outputing result is not 8 coins. 

##### Output #####
$$$$$ Starting to test cards-level ...... $$$$$
If no coins...
*** No Coins Correct ***
Continue if no coins counted...
Check with coins and kingdom cards...
*** 8 Coins Incorrect ***
Continue if 8 coins in hand...
$$$$$ Ending to test cards-level ...... $$$$$

Test Type: Random Test
Test Specification: 
##### Bug #####
1. There should be a random number of players, but each player doesn't hold any coins. 
2. If there is only a random number of coins in hand, it will continue. But the player doesn't hold the exact this random number of coins in hand.
3. The coverages of both C file cannot get 100%. Even the dominion.c just have 2.28%, and that means relative lines aren't executed basically. 

##### Coverage #####
$$$$$ Starting to test cards-level ...... $$$$$
*** No Coins Correct ***
Continue if no coins counted...
Check with coins and kingdom cards...
***1 Coins Incorrect ***
Continue if 1 coins in hand...
$$$$$ Ending to test cards-level ...... $$$$$
File 'randomtest_card.c'
Lines executed:95.83% of 24
----------------------------------------------
File 'dominion.c'
Lines executed:2.28% of 571
**************************************************TEST I****************************************************

**************************************************TEST II***************************************************
Test File: projects/olsenw/dominion.c
Test Type: Unit Test
Test Specification: 
##### Bug & Descripton #####
1. If the players' number is out of boundard 17, it will not run and show segmentation fault. That proves number of players is not limited. 
2. All players have coins, but previous and post states are different. However, requested result should be the same. 

##### Output #####
$$$$$ Starting to test card-level ...... $$$$$
Player 1: Both states are the different.
Player 1: Both states are the different.
Player 1: Both states are the different.
Player 2: Both states are the different.
Player 2: Both states are the different.
Player 2: Both states are the different.
Player 3: Both states are the different.
Player 3: Both states are the different.
Player 3: Both states are the different.
Player 4: Both states are the different.
Player 4: Both states are the different.
Player 4: Both states are the different.
$$$$$ Ending to test card-level ...... $$$$$

Test Type: Random Test
Test Specification: 
##### Bug & Description ##### 
1. All players have coins, but previous and post states are different. However, requested result should be the same.
2. In this random test, there is only one state showing same. But all player should show same in the same place. 

##### Coverage #####
$$$$$ Starting to test card-level ...... $$$$$
Player 1: Both states are the different.
Player 1: Both states are the different.
Player 1: Both states are the different.
Player 2: Both states are the different.
Player 2: Both states are the different.
Player 2: Both states are the different.
Player 3: Both states are the different.
Player 3: Both states are the different.
Player 3: Both states are the different.
Player 4: Both states are the different.
Player 4: Both states are the same.
Player 4: Both states are the different.
$$$$$ Ending to test card-level ...... $$$$$
File 'randtest_card.c'
Lines executed:96.15% of 26
--------------------------------------------
File 'dominion.c'
Lines executed:16.10% of 584
**************************************************TEST II***************************************************

**************************************************TEST III**************************************************
Test File: projects/whitewi/dominion.c
Test Type: Unit Test
Test Specification: 
##### Bug & Descripton #####
1. When player's number is not zero, game should be initialized. 
2. The deck should not be zero, but the testing show zero.

##### Output #####
$$$$$ Starting to test cards ...... $$$$$
Game Initial Failed.
Error, Deck is Zero
$$$$$ Ending to test cards ...... $$$$$

Test Type: Random Test
Test Specification: 
##### Bug & Description #####
1. Sometime, it will show Segmentation fault during testing.
2. The game can be initialized and also the deck is not none zero. 

##### Coverage #####
$$$$$ Starting to test cards ...... $$$$$
Game Initial Successfully.
Correct, Deck is Nonzero
$$$$$ Ending to test cards ...... $$$$$

File 'randtest_card.c'
Lines executed:100.00% of 13
-----------------------------------------
File 'dominion.c'
Lines executed:17.21% of 581
**************************************************TEST III**************************************************