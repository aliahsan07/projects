For both cards, I tried to randomize all inputs and other variables. I randomized the number of players, which player's turn it was, and the three choices into the cardEffect function. I didn't randomize bonus since it didn't factor into these two cards, but maybe I should have. I also added a one in three chance that the deck would need to be reshuffled.

Adventurer had about 25% covereage of dominion.c, and the code for adventurer itself was hit 100%. The drawntreasure variable was incremented 7000 times which is exactly what would be expected for 3500 tests with 2 treasures each. However, my test only passed about 66% of the time. While adventurer seems correct, I'm not sure why my tests are failing so often. In my test, before I call adventurer I count all the treasures in the players hand, then count them after the card has triggered its effect. If the amount of treasures after is 2 more than the amount before it should be a success. This may just be something small I'm missing in my tests, but I can't find it for the life of me.

I decided to test great hall for the other card. This card increases actions by one. I did the same type of testing before and after with the count, and this one had a 100% success rate. I chose to test this one because it was one in a seperate function and I wanted to see if it acted any differently. It had about a 25 % overall coverage, and 100% coverage of the great hall code.
