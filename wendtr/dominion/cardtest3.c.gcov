        -:    0:Source:cardtest3.c
        -:    0:Graph:cardtest3.gcno
        -:    0:Data:cardtest3.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    1:
        -:    2:#include "dominion.h"
        -:    3:#include "assert.h"
        -:    4:#include <stdio.h>
        -:    5:#include "rngs.h"
        -:    6:#include <stdlib.h>
        -:    7:
        -:    8:
        2:    9:int main(int argc, char** argv)
        -:   10:{
        -:   11:  struct gameState G;
        -:   12:  struct gameState H;
        -:   13:  int r; //Holds our values for our funtion calls
        2:   14:  int choice1 = embargo;//Cost 2
        2:   15:  int choice2 = gardens;//Cost 4
        2:   16:  int choice3 = adventurer; //Cost 6
        2:   17:  int handPos = 0;
        -:   18:  int *bonus;
        2:   19:  int player1 = 0;
        2:   20:  int player2 = 1;
        -:   21:  int currentPlayer;
        -:   22:  int temphand[MAX_HAND];
        2:   23:  int drawntreasure = 0;
        2:   24:  int z = 0; //counter for temp hand
        -:   25:
        -:   26:
        2:   27:  printf("\n***Start Testing***\n");
        2:   28:  printf("Initialize Game...\n");
        -:   29:
        -:   30:  int k[10] = {minion, smithy, gardens, tribute, baron, adventurer, cutpurse,
        2:   31:               mine, embargo, outpost};
        2:   32:  initializeGame(2, k, 3, &G);
        -:   33:
        -:   34:
        -:   35:  //Make sure it is player 1's turn
        2:   36:  G.whoseTurn = player1;
        -:   37:
        -:   38:
        2:   39:  printf("\n\nTesting Remodel: this card takes a card from your hand\n");
        2:   40:  printf("and throws it in the discard pile. You then gain a card\n");
        2:   41:  printf("that costs 2 more coins than the trashed card.\n");
        -:   42:  
        -:   43:
        2:   44:  printf("\nFirst Test: Trash an embargo for a gardens card\n");
        2:   45:  G.hand[player1][choice1] = 1;
        2:   46:  r = cardEffect(remodel, choice1, choice2, choice3, &G, handPos, &bonus); 
        2:   47:  assert(r == 0);
        -:   48:
        -:   49:
        2:   50:  printf("\nSecond Test: Trash an embargo for an adventurer card, shouldn't work\n");
        2:   51:  initializeGame(2, k, 10, &H);
        2:   52:  H.whoseTurn = player1;
        -:   53: 
        2:   54:  H.hand[player1][choice1] = 1;
        -:   55:
        2:   56:  r = cardEffect(remodel, choice1, choice3, choice2, &H, handPos, &bonus);
        2:   57:  assert(r == -1);
        -:   58:
        2:   59:  printf("***Tests are Successful***\n");
        2:   60:  return 0;
        -:   61:}
        -:   62:
        -:   63:
        -:   64:
