Random testing history log

Other Files changed: 
1. Added to dominion.c check to ensure that adventurer does not loop endlessly when there is one or less treasure cards
2. Added to dominion.c additional function to calculate total number of cards combined (deck, discard and hand) for a player

Adventurer testing/bugs found
1. Compares before and after count of total cards and number of cards in hand when running the card effect function for adventurer
2. Card effect for adventurer changed to return number of treasures added to hand (between 1 to 2) for smaller sets, the chance of having no treasure cards left
	much more likely. With more often large random seeds sets for this test, this would probably now show up often.
3. Added more treasure for adventurer card to test also to increase visibility
4. Had it so it randomly sets the discard/deck empty to increase coverage
	

Random Card (Remodel) testing/bugs found
1. Setup to arbitrarily pick a card from hand to discard, then adds 2 gold to the value of that card and randomly goes through the possible cards
	that can be bought until it finds one that fits the cost range. Works by comparing cards in hand and total number of cards at end of play.
2. Discovered that remodel wasn't actually trashing cards from hand, so ended up with 2 more cards then starting with
3. Also remodel was set to discard every card in the hand that matched the same type as the card being discarded.
4. Added possibility of empty decks/discard piles randomly
5. Also code was not included (to keep it clean) but I also tested using non-random cards in small sets that I picked and I know would work to see the outcome, that clearly showed that the  
	remodel function was removing duplicates of the discarded card and not trashing cards.
6. Since the basic function of remodeling cards is broken, I didn't include it picking randomly cards. Once that function is changed, I would test what would happen
if the card is picked w/o regard to the gold cost (would only requre changing a couple of lines of the randomizer function)

Coverage:
1. Both tests with around 2000 tests get about 75% coverage, which is decent but could definitely be improved. After fixing the huge bugs found already,
	in both functions, the next step would be introducing more nuanced tests to test more indepth.

