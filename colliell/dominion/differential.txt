
	After running my testdominion.c tester on both my own dominion and the one from hansemik's repo, I found quite a few significant errors. In regards to the card functionality, some errors were in both implementations and some were unique to either his or mine. This is valuable because seeing the difference between how the game was played shows me what errors are specific to my implementation and which are specific to his (i.e., what individual bugs we introduced in assignment 1). It also shows me the similarities between our implementations, meaning errors that existed in dominion.c before we even started to mess with it. For example, in both implementations there is occasionally a negative deck count (which shouldn't ever happen), Tribute seems to put the game in an endless action-phase loop, and the Feast action had to be commented out to avoid program stall (see testdominion.c).

	Looking specifically at what error messages were returned (grep -n Error gameResults.out) playing 7 games, I condensed the error messages into a list. 
      My errors:
		10835:  Error: action phase mine
		27386:  Error: action phase remodel
		29374:  Error: buy phase silver
		29774:  Error: action phase ambassador
	  His errors:
		21982:  Error: action phase mine
		33905:  Error: action phase ambassador
		34075:  Error: buy phase silver

	My tester produces errors when a function returns -1 (as specified in the dominion.c document). Both implementations have similar errors, but only mine has an error in Remodel. The value of this information is that I now have a pretty good idea of which cards had bugs in them already, as well as where my implementation has a bug (recalling assignment 1). As a result of this comparison, I would check my Remodel functionality and look for bugs or even compare my code with his to find differences.